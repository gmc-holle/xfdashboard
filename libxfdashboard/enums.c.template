/*** BEGIN file-header ***/
/*
 * enums: Definitions of enumerations and flags used in GObject objects
 * 
 * Copyright 2012-2021 Stephan Haller <nomad@froevel.de>
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 * 
 * 
 */

#if HAVE_CONFIG_H
# include <config.h>
#endif /* HAVE_CONFIG_H */

#include "enums.h"

/*** END file-header ***/
/*** BEGIN file-production ***/

/* enumerations from "@filename@" */
#include "@filename@"

/*** END file-production ***/

/*** BEGIN value-header ***/
GType @enum_name@_get_type(void)
{
	static gsize	static_g_define_type_id=0;

	if(g_once_init_enter(&static_g_define_type_id))
	{
		static const G@Type@Value values[]=
		{
/*** END value-header ***/

/*** BEGIN value-production ***/
			{ @VALUENAME@, "@VALUENAME@", "@valuenick@" },
/*** END value-production ***/

/*** BEGIN value-tail ***/
			{ 0, NULL, NULL }
		};

		GType	g_define_type_id=g_@type@_register_static(g_intern_static_string("@EnumName@"), values);
		g_once_init_leave(&static_g_define_type_id, g_define_type_id);
	}

	return(static_g_define_type_id);
}

/*** END value-tail ***/

/*** BEGIN file-tail ***/
/*** END file-tail ***/
